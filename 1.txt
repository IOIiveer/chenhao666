git config --global user.name 'shabi/chenhao'git config --global user.email 477@qq.com提交 git add 1.txt
git commit -m "上传一个txt"
检查状态
git status
git diff 1.txt
git log	
git log --pretty=oneline
上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100写成HEAD~100
git reset --hard HEAD^
git reset --hard 版本号前几位
git reflog用来记录你的每一次命令
git diff HEAD -- 1.txt命令可以查看工作区和版本库里面最新版本的区别
git checkout -- file 把最新版本的放到工作区
git reset HEAD <file> 把最新版本的放到暂存区
ssh-keygen -t rsa -C "xxxx@qq.com"
git remote add origin git@github.com:IOIiveer/chenhao666.git
git branch -M main
git push -u origin main
删除远程库，可以用git remote rm <name>		
git clone  git@github.com:IOIiveer/chenhao666.git查看分支：git branch创建分支：git branch <name>切换分支：git checkout <name>或者git switch <name>创建+切换分支：git checkout -b <name>或者git switch -c <name>合并某分支到当前分支：git merge <name>   --no-ff参数可以用普通模式合并，合并后的历史有分支删除分支：git branch -d <name>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场；在master分支上修复的bug，想要合并到当前dev分支，可以用git cherry-pick <commit>命令，把bug提交的修改“复制”到当前分支，避免重复劳动。首先，可以试图用git push origin <branch-name>推送自己的修改；如果推送失败，则因为远程分支比你的本地更新，需要先用git pull远程拉到本地如果合并有冲突，则解决冲突，并在本地提交；没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-to <branch-name> origin/<branch-name>。查看远程库信息，使用git remote -v；